{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","Components/App.js","index.js"],"names":["SearchForm","onSearch","useState","searchText","setSearchText","className","onSubmit","e","preventDefault","currentTarget","reset","htmlFor","type","onChange","target","value","name","placeholder","id","Gif","props","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","key","App","setData","query","setQuery","isLoading","setIsLoading","useEffect","axios","then","response","catch","error","console","log","finally","input","ReactDOM","render","document","getElementById"],"mappings":"oPAiCeA,MA/Bf,YAAmC,IAAbC,EAAY,EAAZA,SAAY,EAK7BC,mBAAS,IALoB,mBAGhCC,EAHgC,KAIhCC,EAJgC,KAkBjC,OACC,0BAAMC,UAAU,cAAcC,SAPV,SAACC,GACrBA,EAAEC,iBACFP,EAASE,GACTI,EAAEE,cAAcC,UAKf,2BAAOL,UAAU,YAAYM,QAAQ,UAArC,UAGA,2BAAOC,KAAK,SAASC,SAhBA,SAACN,GAEvBH,EAAcG,EAAEO,OAAOC,QAcyBC,KAAK,SAASC,YAAY,cACzE,4BAAQL,KAAK,SAASM,GAAG,SAASb,UAAU,iBAC3C,uBAAGA,UAAU,6BAAb,aCnBWc,EANH,SAAAC,GAAK,OACf,wBAAIf,UAAU,YACZ,yBAAKgB,IAAKD,EAAME,IAAKC,IAAI,OCKdC,EAPA,SAAAJ,GAAK,OAClB,wBAAIf,UAAU,WACZ,uBAAGA,UAAU,2BAAb,+BACA,mECgBWoB,EAjBC,SAAAL,GAEd,IACIM,EADEC,EAAUP,EAAMQ,KAQtB,OALEF,EADEC,EAAQE,OACHF,EAAQG,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,CAAKT,IAAKS,EAAIC,OAAOC,aAAaX,IAAKY,IAAKH,EAAIb,QAEnE,kBAAC,EAAD,MAIP,wBAAIb,UAAU,YACXqB,ICyBQS,MAlCf,WAAe,MAGWjC,mBAAS,IAHpB,mBAGN0B,EAHM,KAGAQ,EAHA,OAIalC,mBAAS,QAJtB,mBAINmC,EAJM,KAICC,EAJD,OAKqBpC,oBAAS,GAL9B,mBAKNqC,EALM,KAKKC,EALL,KAiBb,OAPAC,qBAAU,WACRC,IAAM,yCAAD,OAA0CL,EAA1C,uDACJM,MAAK,SAAAC,GAAQ,OAAIR,EAAQQ,EAAShB,KAAKA,SACvCiB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,6CAA8CF,MACzEG,SAAQ,kBAAMT,GAAa,QAC3B,CAACH,IAGF,oCACE,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,aACA,kBAAC,EAAD,CAAYJ,SAfA,SAACiD,GAAD,OAAWZ,EAASY,QAkBpC,yBAAK7C,UAAU,gBACdkC,EAAY,0CACX,kBAAC,EAAD,CAASX,KAAMA,OC9BvBuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f53ecf26.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction SearchForm({ onSearch }) {\n\t// input state\n\tconst [\n\t\tsearchText,\n\t\tsetSearchText\n\t] = useState('');\n\n\tconst onSearchChange = (e) => {\n\t\t// Update state\n\t\tsetSearchText(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tonSearch(searchText);\n\t\te.currentTarget.reset();\n\t};\n\n\treturn (\n\t\t<form className='search-form' onSubmit={handleSubmit}>\n\t\t\t<label className='is-hidden' htmlFor='search'>\n\t\t\t\tSearch\n\t\t\t</label>\n\t\t\t<input type='search' onChange={onSearchChange} name='search' placeholder='Search...' />\n\t\t\t<button type='submit' id='submit' className='search-button'>\n\t\t\t\t<i className='material-icons icn-search'>search</i>\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default SearchForm;\n","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"\"/>\n  </li>\n);\n\nexport default Gif;","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = props => { \n  \n  const results = props.data;\n  let gifs;\n  if (results.length) {\n    gifs = results.map(gif => <Gif url={gif.images.fixed_height.url} key={gif.id} />);    \n  } else {\n    gifs = <NoGifs />\n  }\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}\n    </ul> \n  );\n}\n\nexport default GifList;\n","import React, { useState, useEffect } from 'react'\nimport '../App.css';\nimport axios from 'axios';\n\nimport SearchForm from './SearchForm';\nimport GifList from './GifList';\n\nfunction App() {\n\n  //declare state\n  const [data, setData] = useState([])\n  const [query, setQuery] = useState('dogs')\n  const [isLoading, setIsLoading] = useState(true)\n\n  const updateQuery = (input) => setQuery(input) \n\n  //useEffect hook\n  useEffect(() => {\n    axios(`http://api.giphy.com/v1/gifs/search?q=${query}&limit=24&api_key=4hYEwOGpHRpjIiCrGrQJQOrk5t23IxWj`)\n    .then(response => setData(response.data.data))\n    .catch(error => console.log('There has been an error fetching this data', error))\n    .finally(() => setIsLoading(false))\n  }, [query])\n\n  return (\n    <>\n      <div className=\"main-header\">\n        <div className=\"inner\">\n          <h1 className=\"main-title\">GifSearch</h1>\n          <SearchForm onSearch={updateQuery}/>\n        </div>\n      </div>\n      <div className=\"main-content\">\n      {isLoading ? <p>Loading....</p> :\n        <GifList data={data}/>\n      }\n      </div>\n    </>\n  );\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}